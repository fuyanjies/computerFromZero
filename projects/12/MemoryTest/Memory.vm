function Memory.init 0
push constant 2048
pop static 0
push constant 0
pop static 1
push constant 0
push static 0
add
push constant 14335
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 1
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 4
push static 0
pop local 0
push constant 0
push local 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 17
call String.new 1
push constant 102
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 95
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 122
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push constant 0
push constant 2
push local 0
add
pop pointer 1
push that 0
eq
not
not
if-goto WHILE_END0
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push constant 0
push local 0
eq
not
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 3
add
lt
and
not
if-goto WHILE_END1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
push local 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 16
call String.new 1
push constant 99
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
label IF_FALSE1
push constant 3
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
push constant 3
sub
lt
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 3
add
pop local 3
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 2
push constant 0
push local 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
pop static 0
goto IF_END3
label IF_FALSE3
push constant 2
push local 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END3
push constant 0
push local 2
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
push local 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE4
push local 3
return
goto IF_END2
label IF_FALSE2
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
push argument 0
sub
pop local 3
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push argument 0
sub
push constant 3
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 3
sub
pop local 0
push constant 0
push local 0
add
push argument 0
push constant 3
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
return
label IF_END2
function Memory.deAlloc 3
push argument 0
push constant 3
sub
pop local 2
push static 0
pop local 0
push constant 0
push local 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
pop static 0
push constant 0
return
label IF_FALSE0
push local 0
push local 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push constant 0
push local 2
add
pop pointer 1
push that 0
add
push local 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push constant 2
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 2
add
push constant 0
push local 2
add
pop pointer 1
push that 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
pop static 0
push constant 0
return
goto IF_END2
label IF_FALSE2
push constant 1
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
pop static 0
push constant 0
return
label IF_END2
label IF_FALSE1
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 1
label WHILE_EXP0
push constant 0
push local 1
eq
not
push local 2
push local 1
gt
and
not
if-goto WHILE_END0
push local 1
pop local 0
push constant 2
push local 0
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 0
push local 0
add
pop pointer 1
push that 0
add
push local 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push local 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
push local 2
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE3
push constant 0
push local 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 2
push local 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE4
push constant 2
push local 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
